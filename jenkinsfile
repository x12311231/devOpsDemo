pipeline {
    agent any

    stages {
        stage('拉取代码') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '${tag}']], extensions: [], userRemoteConfigs: [[credentialsId: '957944e5-1945-412b-8a6a-dbdefb41fdfa', url: 'http://web:8929/gitlab-instance-8982e4fb/test.git']]])
                echo '拉取代码'
            }
        }
        stage('通过maven构建') {
            steps {
                sh '/var/jenkins_home/apache-maven-3.8.6/bin/mvn clean package -DskipTests'
            }
        }
        stage('sonarqube') {
            steps {
                sh '/var/jenkins_home/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner -Dsonar.host.url=http://sonarqube:9000/ -Dsonar.source=./ -Dsonar.projectname=${JOB_NAME} -Dsonar.projectKey=${JOB_NAME} -Dsonar.java.binaries=./target -Dsonar.login=308a4c8249eee4959f8dbecea1bab723e0beaaa0'
                echo '质量检测3.1'
            }
        }
        stage('build') {
            steps {
                sshPublisher(publishers: [sshPublisherDesc(configName: '192.168.0.19', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '''cd /tmp/jenkins_root/docker
mv ../target/*.jar ./
docker-compose build --no-cache
docker tag tttt:v2.0.0 192.168.0.9:90/test/tttt:${tag}
docker login 192.168.0.9:90 -u admin -p Harbor12345
docker push 192.168.0.9:90/test/tttt:${tag}''', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: 'target/* docker/*')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])            }
         }
        stage('deploy') {
            steps {
sshPublisher(publishers: [sshPublisherDesc(configName: '192.168.0.9', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '''docker pull 192.168.0.9:90/test/tttt:${tag} && \\
docker stop javatest && \\
docker rm javatest && \\
docker run --name javatest -p 8881:8881 -d 192.168.0.9:90/test/tttt:${tag} ''', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])            }
        }
    }
    post {
        success {
            dingtalk (
                robot: 'dingding',
                type: 'MARKDOWN',
                title: "success: ${JOB_NAME}",
                text: ["- 构建成功：${JOB_NAME} 版本：${tag} \n 时间：${currentBuild.durationString}"]
            )
        }
        failure {
            dingtalk (
                robot: 'dingding',
                type: 'MARKDOWN',
                title: "success: ${JOB_NAME}",
                text: ["- 构建失败：${JOB_NAME} 版本：${tag} \n 时间：${currentBuild.durationString}"]
            )
        }
    }
}
